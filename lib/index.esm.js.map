{"version":3,"file":"index.esm.js","sources":["../src/helpers/createResult.js","../src/helpers/getNodeListFromSelector.js","../src/helpers/inlineTextFormat.js","../src/helpers/getSourceContent.js","../src/helpers/getSourcesFromNodeList.js","../src/engines/json.js","../src/engines/markup.js","../src/engines/spa.js","../src/index.js"],"sourcesContent":["/**\n * This create a result object and allows transform the given data returned.\n *\n * @param {object} result\n * @param {Function} fork\n * @return {object} Return the final result\n */\nexport default (result, fork) => {\n  return fork ? fork(result) : result\n}\n","import jsdom from \"jsdom\"\n\n/**\n * This extract a NodeList using a Query Selector item as root\n *\n * @param {string} html\n * @param {object} node\n * @param {object} options\n * @return {NodeList} // A list of HTMLElement items that match the given Query Selector\n */\nexport default (html, node, options = {}) => {\n  const dom = new jsdom.JSDOM(html, options)\n  const doc = dom.window.document\n  return doc.querySelectorAll(node.value)\n}\n","/**\n * This helper format text when needed removing inconsistences\n *\n * @param {string} text\n * @param {boolean} parse\n * @return {string} Return text parsed/formatted\n */\nexport default (text, parse) => {\n  if (!parse) {\n    return text\n  }\n\n  let inlineValue = text.replace(/\\n|\\r/g, \"\")\n\n  return inlineValue.replace(/\\s+/g, \" \").trim()\n}\n","import inlineTextFormat from \"./inlineTextFormat.js\"\n\n/**\n * This extract content from a HTMLElement node\n *\n * @param {HTMLElement} node\n * @param {object} selector\n * @return {string} Return content\n */\nexport default (node, selector) => {\n  const { value, attribute, prefix = \"\", suffix = \"\", inline = true } = selector\n  const el = node.querySelector(value)\n  if (attribute) {\n    if (el) {\n      return `${prefix}${inlineTextFormat(\n        el.getAttribute(attribute),\n        inline\n      )}${suffix}`\n    } else {\n      return null\n    }\n  }\n\n  if (el) {\n    return `${prefix}${inlineTextFormat(el.textContent, inline)}${suffix}`\n  }\n\n  return null\n}\n","import getSourceContent from \"./getSourceContent.js\"\n\n/**\n * This extract sources from a given NodeList of HTMLElement items\n *\n * @param {NodeList} nodeList\n * @param {object} keys\n * @return {Array} Return a list of sources mapped\n */\nexport default (nodeList, keys) => {\n  let sources = []\n\n  nodeList.forEach((node) => {\n    let source = {}\n\n    for (const key in keys) {\n      if (Object.prototype.hasOwnProperty.call(keys, key)) {\n        const selector = keys[key]\n        const content = getSourceContent(node, selector)\n\n        if (content) {\n          source[key] = content\n        }\n      }\n    }\n    sources = [...sources, source]\n  })\n\n  return sources\n}\n","import axios from \"axios\"\nimport { createResult } from \"../helpers/index.js\"\n\nconst getDataFromChain = (selector, data) => {\n  return selector\n    .replace(/\\[|\\]\\.?/g, \".\")\n    .split(\".\")\n    .filter((s) => s)\n    .reduce((acc, val) => acc && acc[val], data)\n}\n\nconst getSource = (jsonObject, selector) => {\n  const { value, prefix = \"\", suffix = \"\" } = selector\n  const content = getDataFromChain(value, jsonObject)\n\n  if (content) {\n    return `${prefix}${content}${suffix}`\n  }\n\n  return null\n}\n\nconst getSourcesFromJSON = async ({ options, selectors, metadata, fork }) => {\n  try {\n    const { root, ...rest } = selectors\n    const { data } = await axios(options.request)\n    const list = root ? getDataFromChain(root.value, data) : data\n    const sources = list.map((jsonObject) => {\n      let source = {}\n\n      for (const item in rest) {\n        if (Object.prototype.hasOwnProperty.call(rest, item)) {\n          const selector = rest[item]\n          const content = getSource(jsonObject, selector)\n          if (content) {\n            source[item] = content\n          }\n        }\n      }\n\n      return source\n    })\n\n    return createResult(\n      {\n        sources: sources.slice(0, options.limit),\n        metadata,\n      },\n      fork\n    )\n  } catch ({ message }) {\n    return createResult(\n      {\n        sources: [],\n        metadata,\n        error: message,\n      },\n      fork\n    )\n  }\n}\n\nexport default {\n  engine: \"json\",\n  run: getSourcesFromJSON,\n}\n","import axios from \"axios\"\nimport {\n  getNodeListFromSelector,\n  getSourcesFromNodeList,\n  createResult,\n} from \"../helpers/index.js\"\n\nconst getSourcesFromMarkup = async ({ options, selectors, metadata, fork }) => {\n  try {\n    const { root, ...rest } = selectors\n    const { data } = await axios(options.request)\n    const nodeList = getNodeListFromSelector(data, root, options.dom)\n    const sources = getSourcesFromNodeList(nodeList, rest)\n\n    return createResult(\n      {\n        sources: sources.slice(0, options.limit),\n        metadata,\n      },\n      fork\n    )\n  } catch ({ message }) {\n    return createResult(\n      {\n        sources: [],\n        metadata,\n        error: message,\n      },\n      fork\n    )\n  }\n}\n\nexport default {\n  engine: \"markup\",\n  run: getSourcesFromMarkup,\n}\n","import puppeteer from \"puppeteer-core\"\nimport {\n  getNodeListFromSelector,\n  getSourcesFromNodeList,\n  createResult,\n} from \"../helpers/index.js\"\n\nconst createRequest = async ({ url, events = {}, ...rest }) => {\n  const browser = await puppeteer.launch(rest)\n  const { onBrowserLoad, willPageLoad, onPageLoad, onContentLoad } = events\n\n  if (onBrowserLoad) {\n    await onBrowserLoad(browser)\n  }\n\n  const page = await browser.newPage()\n\n  if (willPageLoad) {\n    await willPageLoad(page)\n  }\n\n  await page.goto(url)\n\n  if (onPageLoad) {\n    await onPageLoad(page)\n  }\n\n  const content = await page.content()\n\n  if (onContentLoad) {\n    await onContentLoad(content, page)\n  }\n\n  await browser.close()\n\n  return content\n}\n\nconst getSourcesFromSPA = async ({ options, selectors, metadata, fork }) => {\n  try {\n    const { root, ...rest } = selectors\n    const data = await createRequest(options.request)\n    const nodeList = getNodeListFromSelector(data, root, options.dom)\n    const sources = getSourcesFromNodeList(nodeList, rest)\n\n    return createResult(\n      {\n        sources: sources.slice(0, options.limit),\n        metadata,\n      },\n      fork\n    )\n  } catch ({ message }) {\n    return createResult(\n      {\n        sources: [],\n        metadata,\n        error: message,\n      },\n      fork\n    )\n  }\n}\n\nexport default {\n  engine: \"spa\",\n  run: getSourcesFromSPA,\n}\n","import JSONEngine from \"./engines/json.js\"\nimport markupEngine from \"./engines/markup.js\"\nimport SPAEngine from \"./engines/spa.js\"\n\n/**\n * @param {Array<object>} schemas A list of schemas following the default and/or custom engines registered.\n * @param {Array<Promise>} customEngines A list of custom engines to be registered.\n * @return {Promise} Returns a promise with data sources.\n */\nconst Tatooine = (schemas, customEngines = []) => {\n  const engines = [JSONEngine, markupEngine, SPAEngine, ...customEngines]\n  let sources = []\n\n  schemas.map((schema) => {\n    engines.forEach(({ engine, run }) => {\n      if (engine === schema.engine) {\n        sources = [...sources, run(schema)]\n      }\n    })\n  })\n\n  return Promise.all(sources)\n}\n\nexport default Tatooine\n"],"names":[],"mappings":"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"}